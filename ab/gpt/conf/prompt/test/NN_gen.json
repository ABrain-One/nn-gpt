{
    "improve_classification_only": {
        "comment": [],
        "input_list": [{"para": "nn_code","value": "nn_code"}],
        "addon_list": [],
        "task": "img-classification",
        "addon_task": null,
        "prompts": [
            "You are given a neural network model defined in the code block at the end of the prompt. Your task is to modify the architecture of the model (i.e., the layers) with the goal of increasing accuracy on image classification tasks.",
            "Please follow these strict constraints:",
            "1. MODIFY ONLY THE LAYERS – You are only allowed to change the model’s internal architecture:\n - This includes adding, removing, or changing the arguments of existing neural network layers.\n - You may reconfigure how layers are structured (e.g., layer order or dimensions).",
            "2. DO NOT ADD NEW METHODS, PARAMETERS, OR EXTERNAL STRUCTURES \n – Do not introduce any new helper methods, training tricks, optimization strategies, or external changes to training or data processing logic.\n - Your modifications must be strictly confined to the architecture defined in the model class.",
            "3.  YOU MUST MODIFY AT LEAST ONE LAYER – Ensure that at least one layer is different from the original. Do not return unchanged code.",
            "4. RETURN THE FULL CODE \n – Your reply must include the complete modified code (not just the class you modified), preserving all original classes and structures.\n - Wrap your final output between the tags <nn> and </nn>.",
            "4. RETURN HYPERPARAMETERS - provide predicted values for 'batch', 'transform', and all supported_hyperparameters in flat JSON format within <hp>...</hp> tags to optimize first-epoch accuracy. If uncertain, set 'batch' to 64 and 'transform' to 'norm_128_flip'.",
            "6. DON'T REMOVE: function 'supported_hyperparameters' and '__init__', 'learn', 'train_setup' methods of the 'Net' class, which are required for Net training by external functionality and have to be accessible without change of their argument type and signatures.",
            "7. ACCURACY TRADEOFFS ARE ACCEPTABLE – If your modifications potentially reduce accuracy, that is acceptable. The goal is experimentation.",
            "INPUT CODE (Do not edit directly; only submit the modified version in the required format):",
            "<nn>\n{nn_code}\n</nn>"
        ]
    },

    "improve_segmentation_only": {
        "input_list": [{"para": "nn_code","value": "nn_code"}],
        "addon_list": [{"para": "addon_nn_code","value": "nn_code"}],
        "task": "img-segmentation",
        "addon_task": "img-classification",
        "prompts": [
            "Improve the following implementation to make it a better performance on image segmentation tasks given another backbone implementation.",
            "The class name should be 'Net' and you MUST PROVIDE FULL CODES of the changed implementation.",
            "You can change the structure, alternatively also changed training procedure.",
            "Strictly DO NOT remove the `train_setup` and `learn` method, and NEVER change their parameters or implementation.",
            "Strictly NO use of models in `torchvision`.",
            "Focus on improving the model architecture and forward pass only.",
            "Code:\n```\n{nn_code}\n```",
            "Backbone:\n```\n{addon_nn_code}\n```"
        ]
    }
}